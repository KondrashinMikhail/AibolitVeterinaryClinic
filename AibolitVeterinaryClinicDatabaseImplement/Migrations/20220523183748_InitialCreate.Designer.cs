// <auto-generated />
using System;
using AibolitVeterinaryClinicDatabaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AibolitVeterinaryClinicDatabaseImplement.Migrations
{
    [DbContext(typeof(AibolitVeterinaryClinicDatabase))]
    [Migration("20220523183748_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AnimalBreed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnimalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.AnimalVaccinationRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("VaccinationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("VaccinationId");

                    b.ToTable("AnimalVaccinationRecords");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClientLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorSpecification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Medicine", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("MedicineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.ServiceMedicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceMedicines");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Vaccination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("VaccinationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Visit", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateVisit")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.VisitAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitAnimals");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.VisitMedicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitMedicines");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.VisitService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("VisitId");

                    b.ToTable("ServiceVisits");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Animal", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Client", "Clients")
                        .WithMany("Animals")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.AnimalVaccinationRecord", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Animal", "Animal")
                        .WithMany("AnimalVaccinationRecords")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Vaccination", "Vaccination")
                        .WithMany("AnimalVaccinationRecords")
                        .HasForeignKey("VaccinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Vaccination");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Medicine", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Doctor", "Doctor")
                        .WithMany("Medicines")
                        .HasForeignKey("DoctorId");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Service", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Doctor", "Doctor")
                        .WithMany("Services")
                        .HasForeignKey("DoctorId");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.ServiceMedicine", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Medicine", "Medicine")
                        .WithMany("ServiceMedicines")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Service", "Service")
                        .WithMany("ServiceMedicines")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Visit", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Client", "Client")
                        .WithMany("Visits")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.VisitAnimal", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Animal", "Animal")
                        .WithMany("VisitAnimals")
                        .HasForeignKey("AnimalId");

                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Visit", "Visit")
                        .WithMany("VisitAnimals")
                        .HasForeignKey("VisitId");

                    b.Navigation("Animal");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.VisitMedicine", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Medicine", "Medicine")
                        .WithMany("VisitMedicines")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Visit", "Visit")
                        .WithMany("VisitMedicines")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.VisitService", b =>
                {
                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Service", "Service")
                        .WithMany("ServiceVisits")
                        .HasForeignKey("ServiceId");

                    b.HasOne("AibolitVeterinaryClinicDatabaseImplement.Models.Visit", "Visit")
                        .WithMany("VisitServices")
                        .HasForeignKey("VisitId");

                    b.Navigation("Service");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Animal", b =>
                {
                    b.Navigation("AnimalVaccinationRecords");

                    b.Navigation("VisitAnimals");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Client", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Doctor", b =>
                {
                    b.Navigation("Medicines");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Medicine", b =>
                {
                    b.Navigation("ServiceMedicines");

                    b.Navigation("VisitMedicines");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Service", b =>
                {
                    b.Navigation("ServiceMedicines");

                    b.Navigation("ServiceVisits");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Vaccination", b =>
                {
                    b.Navigation("AnimalVaccinationRecords");
                });

            modelBuilder.Entity("AibolitVeterinaryClinicDatabaseImplement.Models.Visit", b =>
                {
                    b.Navigation("VisitAnimals");

                    b.Navigation("VisitMedicines");

                    b.Navigation("VisitServices");
                });
#pragma warning restore 612, 618
        }
    }
}
